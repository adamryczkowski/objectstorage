% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runtime_objects.R
\name{infer_save_locations}
\alias{infer_save_locations}
\title{Generates plan of where and how save objects, which is used by other low-level functions}
\usage{
infer_save_locations(storagepath, objectnames = NULL, obj.environment,
  flag_forced_save_filenames = FALSE, flag_use_tmp_storage = FALSE,
  forced_archive_paths = NA, compress = "gzip",
  large_archive_prefix = NULL)
}
\arguments{
\item{storagepath}{Path with the storage.}

\item{objectnames}{Character vector with the names of the objects to add. Defaults to all objects in the
\code{obj.environment}.}

\item{obj.environment}{Environment or named list with the objects. It is needed only for getting
the object sizes in case user selects the default algorithm.}

\item{flag_forced_save_filenames}{Controls, whether force a particular object in its own dedicated archive.
Value can be either single boolean, or vector of booleans with the same size as
\code{objectnames}, or named boolean vector with keys values of \code{objectnames}. In the latter case,
non-mentioned objects will be assumed value \code{FALSE} (i.e. not forced filename).}

\item{flag_use_tmp_storage}{Relevant only for \code{xz} compression with the external tool \code{pxz}.
Normally the object will be quickly saved without compression, then compressed in the background
and at the end the filenames will be swapped. Setting this flag will force saving in the quick \code{\\tmp}
directory, instead of the target path. It is usefull if the target path is very slow (perhaps a distant
network share).
Value can be either single boolean, or vector of booleans with the same size as
\code{objectnames}, or named boolean vector with keys values of \code{objectnames}. In the latter case,
non-mentioned objects will be assumed value \code{FALSE} (i.e. not forced filename).}

\item{forced_archive_paths}{Overrides a specific path for the object. More than one object can be given
the same path - in that case the archive will be of the "multiple objects" type. This override is a stronger
version of parameter \code{flag_forced_save_filenames} - the difference is that it allows for manual naming
and locating the archives.
Value can be either single character, or vector of characters with the same size as
\code{objectnames}, or named character vector with keys values of \code{objectnames}. In the latter case,
non-mentioned objects will be assumed value \code{NA} (i.e. not having forced filename).}

\item{compress}{Controls the compression of the archive. It is important to realize, that if the archive
had already contained some objects prior to modifying it and the modification would not remove the objects,
those objects will be re-compressed with the \code{compress} compression, since the archive will effectively
be re-added. Supports 3 calues: \code{none}, \code{gzip} and \code{xz}.
Value can be either single character, or vector of characters with the same size as
\code{objectnames}, or named character vector with keys values of \code{objectnames}. In the latter case,
non-mentioned objects will be assumed value \code{gzip}.}

\item{large_archive_prefix}{If set, all new archives for large objects will be saved with this prefix, otherwise in the
\code{dirname(storagepath)}.
\code{storagepath}. It is up to the user to make sure this directory is empty and no file name conflicts will
arise.}

\item{default_save_directory_suffix}{Default location for each saved archive, absolute or relative to the
\code{storagepath}. Defaults to \code{''}, i.e. the objects will be saved in the same place as the \code{storagepath}.}
}
\value{
Returns list with one element for each archive to touch. Each element will be a list with the
following properties
\describe{
\item{\strong{objectnames}}{Character vector with one or more object names that are going to be stored in this archive.}
\item{\strong{archive_filename}}{Character vector with the path to the archive, stored as relative path to the \code{storagepath}}
\item{\strong{compress}}{Compression method for all files}
\item{\strong{flag_use_tmp_storage}}{Whether or not use the temporary storage}
}
}
\description{
Generates plan of where and how save objects, which is used by other low-level functions
}
